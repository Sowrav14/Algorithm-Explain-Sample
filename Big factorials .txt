/**
 * @file Anti_factorial.cpp
 * @author Sowrav Nath
 * @brief 
 * 
 *                                          Calculate big factorials like 10000! lenght will be 100000(approx)
 *          make an array where each cell will contain a digit of desired factorial..
 *          if any cell become more than one digit pass it to the next cell..
 *          
 *          1! = 1-0-0-0-0-0-0
 *          2! = 2-0-0-0-0-0-0
 *          3! = 6-0-0-0-0-0-0
 *          4! = 24-0-0-0-0-0-0
 *             = 4-2-0-0-0-0-0
 *          5! = 20-10-0-0-0-0-0
 *             = 0-2-1-0-0-0-0-0
 *          etc..
 * 
 * 
 * @version 0.1
 * @date 2023-09-30
 * 
 * @copyright Copyright (c) 2023
 * 
 */

#include<bits/stdc++.h>
using namespace std;
const int N = 500;
int fact[N];


void setting(int x){
    for(int i=0;i<N;i++){
        fact[i] = fact[i]*x;
    }
    for(int i=0;i<N-1;i++){
        fact[i+1] += fact[i] / 10;
        fact[i] = fact[i] % 10;
    }
}

bool check(string s){

    for(int i=0;i<s.size();i++){
        if(s[i]-'0' != fact[i]) return false;
    }
    return true;
}

int main(){
    string s; cin >> s;
    reverse(s.begin(), s.end());
    fact[0] = 1;
    for(int i=1;i<N;i++){
        setting(i);
        if(check(s)){
            cout << i << endl;
            break;
        }
    }
}